diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2187deb8e8..ad15a73395 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -65,6 +65,7 @@ if(ENABLE_COVERAGE)
     include(cmake/coverage.cmake)
 endif()
 
+set(CMAKE_INTERPROCEDURAL_OPTIMIZATION_RELEASE ${ENABLE_LTO})
 if(APPLE AND CMAKE_OSX_DEPLOYMENT_TARGET AND
     CMAKE_OSX_DEPLOYMENT_TARGET VERSION_LESS 10.15)
     message(FATAL_ERROR "OpenVINO requires MACOSX_DEPLOYMENT_TARGET at least 10.15, specified ${CMAKE_OSX_DEPLOYMENT_TARGET}")
diff --git a/src/frontends/common/CMakeLists.txt b/src/frontends/common/CMakeLists.txt
index e4d2fe63e1..eace2a5593 100644
--- a/src/frontends/common/CMakeLists.txt
+++ b/src/frontends/common/CMakeLists.txt
@@ -52,7 +52,8 @@ target_link_libraries(${TARGET_NAME}_obj PRIVATE openvino::util openvino::core::
 
 # TODO: fix lto
 set_target_properties(${TARGET_NAME}_obj PROPERTIES
-    INTERPROCEDURAL_OPTIMIZATION_RELEASE OFF)
+    INTERPROCEDURAL_OPTIMIZATION_RELEASE ${ENABLE_LTO})
+ov_add_compiler_flags(-march=haswell)
 
 set(FRONTEND_LIB_SUFFIX "${FRONTEND_NAME_SUFFIX}${OV_BUILD_POSTFIX}")
 if(APPLE)
--- a/thirdparty/onnx/CMakeLists.txt
+++ b/thirdparty/onnx/CMakeLists.txt
@@ -21,7 +21,10 @@ endif()
 if(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
     # 4244 conversion from 'XXX' to 'YYY', possible loss of data
     ov_add_compiler_flags(/wd4244)
+else()
+    ov_add_compiler_flags(-march=haswell)
 endif()
+set(CMAKE_INTERPROCEDURAL_OPTIMIZATION_RELEASE ${ENABLE_LTO})
 
 set(PYTHON_EXECUTABLE "${Python3_EXECUTABLE}")
 set(ONNX_USE_PROTOBUF_SHARED_LIBS OFF CACHE BOOL "Use dynamic protobuf by ONNX library" FORCE)
diff --git a/thirdparty/protobuf/CMakeLists.txt b/thirdparty/protobuf/CMakeLists.txt
index a16bd56d11..2829926e68 100644
--- a/thirdparty/protobuf/CMakeLists.txt
+++ b/thirdparty/protobuf/CMakeLists.txt
@@ -10,6 +10,7 @@ set(BUILD_SHARED_LIBS OFF)
 
 if(CMAKE_COMPILER_IS_GNUCXX OR OV_COMPILER_IS_CLANG OR (OV_COMPILER_IS_INTEL_LLVM AND UNIX))
     ov_add_compiler_flags(-Wno-all)
+    ov_add_compiler_flags(-march=haswell)
     if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 11 AND CMAKE_COMPILER_IS_GNUCXX)
         ov_add_compiler_flags(-Wno-stringop-overflow)
     endif()
@@ -48,6 +49,7 @@ else()
     set(protobuf_dir protobuf/cmake)
 endif()
 
+set(CMAKE_INTERPROCEDURAL_OPTIMIZATION_RELEASE ${ENABLE_LTO})
 add_subdirectory(${protobuf_dir} EXCLUDE_FROM_ALL)
 get_directory_property(protobuf_VERSION DIRECTORY ${protobuf_dir} DEFINITION protobuf_VERSION)
 
@@ -63,7 +65,7 @@ if(CMAKE_COMPILER_IS_GNUCXX OR OV_COMPILER_IS_CLANG OR OV_COMPILER_IS_INTEL_LLVM
             CXX_VISIBILITY_PRESET default
             C_VISIBILITY_PRESET default
             VISIBILITY_INLINES_HIDDEN OFF
-            INTERPROCEDURAL_OPTIMIZATION_RELEASE OFF)
+            INTERPROCEDURAL_OPTIMIZATION_RELEASE ${ENABLE_LTO})
     endif()
     ov_disable_all_warnings(${_protoc_libs} libprotobuf-lite)
     set_target_properties(libprotobuf-lite PROPERTIES
